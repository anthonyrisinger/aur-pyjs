#!/bin/bash
# bootstrap pyjamas AUR + optionally create devel environment in $HOME

exec 3> /dev/null

spushd () { pushd ${1} >&3; }
spopd () { popd >&3; }
fatal () { echo ${1}; exit 1; }

BASE=$(dirname $(readlink -f ${0}))
LOCAL=aur-pyjs
SANDBOX_ONLY=${1:-false}

create_or_update_sandbox () {

    spushd ${BASE}

    if [ -e .pyjs/.git ]; then
        git --git-dir=.pyjs/.git pull
    else
        git clone git://pyjs.org/git/pyjamas.git .pyjs
    fi  

    # run bootstrap everytime
    if [ -d .pyjs ]; then
        spushd .pyjs
        make local-build || fatal 'problem bootstrapping pyjs sandbox'
        spopd
    fi  

    spopd

}

if ! ${SANDBOX_ONLY}; then
    [ -n "${HOME}" ] || fatal '$HOME is not set'
    if ! [ -e "${HOME}/${LOCAL}" ]; then
        cp -R ${BASE} ${HOME}/${LOCAL}
        BASE=${HOME}/${LOCAL}
    elif [ -x "${HOME}/${LOCAL}/init" ]; then
        exec ${HOME}/${LOCAL}/init 'true'
    else
        fatal "${HOME}/${LOCAL} exists, but appears foreign"
    fi
fi

create_or_update_sandbox

exit 0
