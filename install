#!/bin/bash
#
# no args       : makepkg PKGBUILD only
# $1 = 'true'   : + install locally
# $2 = 'true'   : + upload to AUR [legacy] (trigger update)
#
# ./install <local_install> <upload_to_aur>

LOCAL_IS_MAINTAINER=false

MAINTAINER=extofme
CATEGORY_ID=3
CATEGORY_NAME=devel

exec 3> /dev/null

BASE=$(dirname $(readlink -f ${0}))
LOCAL_INSTALL=${1:-false}
AUR_UPLOAD=${2:-false}
: ${AUR_UPLOAD_EXEC:='aurploader'}

${LOCAL_INSTALL} && makepkg_opts='-i'
${AUR_UPLOAD} && {
    do_aur () {
        PKGDEST="${BASE}/pkg" makepkg --source
        ${AUR_UPLOAD_EXEC} ${1}
    }
} || {
    do_aur () { :; }
}

spushd () { pushd ${1} >&3; }
spopd () { popd >&3; }
error() { echo "${1}"; }
fatal () { echo "${1}"; exit 1; }

TARGET_SRC='aur-pyjs-git-*.src.tar.*'
TARGET_PKG='aur-pyjs-git-*.pkg.tar.*'

spushd ${BASE}/pkg
rm -f ${TARGET_SRC} ${TARGET_PKG}
PKGDEST="${BASE}/pkg" makepkg -d ${makepkg_opts} || fatal 'Build failed'
do_aur ${TARGET_SRC} || error 'AUR [legacy] sync failed'

spopd
exit 0
